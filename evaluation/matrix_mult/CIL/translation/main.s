	.text	

fail:
	movl	pl_reg_bank+1024,%eax
	jmp	*-4(%eax)
	.p2align	4,,15
	.type	X0_main__a3,@function
.globl X0_main__a3

X0_main__a3:
	movl	$6,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+4,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483641,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+4,%eax
	movl	%eax,-20(%edi)
	movl	$.Lcont0,pl_reg_bank+1036
	jmp	X1_246D61696E2F335F2461757831__a1
.Lcont0:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+1040,%edi
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+4
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+8
	leal	-24(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+12
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+16
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+20
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+24
	leal	-28(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+28
	movl	$.Lcont1,pl_reg_bank+1036
	jmp	X0_oneouterloop__a8
.Lcont1:
	movl	pl_reg_bank+1040,%edi
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont2,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont2:
	movl	$.Lcont3,pl_reg_bank+1036
	jmp	X0_nl__a0
.Lcont3:
	movl	pl_reg_bank+1040,%edi
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont4,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont4:
	movl	$.Lcont5,pl_reg_bank+1036
	jmp	X0_nl__a0
.Lcont5:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+1040,%edi
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+4
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+8
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+12
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+16
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+20
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+24
	leal	-32(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+28
	movl	$.Lcont6,pl_reg_bank+1036
	jmp	X0_oneouterloop__a8
.Lcont6:
	movl	pl_reg_bank+1040,%edi
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont7,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont7:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+1040,%edi
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+4
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+8
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+12
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+16
	leal	-36(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+20
	movl	$.Lcont8,pl_reg_bank+1036
	jmp	X0_calculate_out_loop__a6
.Lcont8:
	movl	pl_reg_bank+1040,%edi
	movl	-36(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont9,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont9:
	movl	$.Lcont10,pl_reg_bank+1036
	jmp	X0_nl__a0
.Lcont10:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+1040,%edi
	movl	-36(%edi),%eax
	call	Pl_Put_Unsafe_Value
	movl	%eax,pl_reg_bank+4
	call	Pl_Deallocate
	jmp	X0_pr__a2
	.p2align	4,,15
	.type	X1_246D61696E2F335F2461757831__a1,@function

X1_246D61696E2F335F2461757831__a1:
	movl	$Lpred2_1+0,%eax
	call	Pl_Create_Choice_Point1
	movl	$0,%eax
	call	Pl_Allocate
	movl	at+20,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+0,%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483569,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Blt_Neq
	testl	%eax,%eax
	je	fail
	movl	ta+0,%eax
	call	Pl_Put_Atom_Tagged
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont11,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont11:
	call	Pl_Deallocate
	jmp	X0_nl__a0

Lpred2_1:
	call	Pl_Delete_Choice_Point1
	jmp	X0_nl__a0
	.p2align	4,,15
	.type	X0_pr__a2,@function
.globl X0_pr__a2

X0_pr__a2:
	movl	$Lpred3_1+0,%eax
	call	Pl_Create_Choice_Point2
	movl	$2,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+4,%eax
	movl	%eax,-20(%edi)
	movl	at+28,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Blt_Lt
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont12,pl_reg_bank+1036
	jmp	X0_prline__a3
.Lcont12:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+4
	call	Pl_Deallocate
	jmp	X0_pr__a2

Lpred3_1:
	call	Pl_Delete_Choice_Point2
	movl	pl_reg_bank+0,%eax
	movl	%eax,pl_reg_bank+4
	movl	fn+0,%eax
	call	Pl_Put_Structure_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+4,%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	jmp	X1_5C5C2B__a1
	.p2align	4,,15
	.type	X0_prline__a3,@function
.globl X0_prline__a3

X0_prline__a3:
	movl	$Lpred4_1+0,%eax
	call	Pl_Create_Choice_Point3
	movl	$4,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+4,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+8,%eax
	movl	%eax,-24(%edi)
	movl	at+28,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-20(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Blt_Lt
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Mul
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	leal	pl_reg_bank+4,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Add
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+4
	leal	-28(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont13,pl_reg_bank+1036
	jmp	X0_nth__a3
.Lcont13:
	movl	pl_reg_bank+1040,%edi
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont14,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont14:
	movl	ta+4,%eax
	call	Pl_Put_Atom_Tagged
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont15,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont15:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-20(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+4
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+8
	call	Pl_Deallocate
	jmp	X0_prline__a3

Lpred4_1:
	call	Pl_Delete_Choice_Point3
	movl	$0,%eax
	call	Pl_Allocate
	movl	fn+0,%eax
	call	Pl_Put_Structure_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+4,%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	movl	$.Lcont16,pl_reg_bank+1036
	jmp	X1_5C5C2B__a1
.Lcont16:
	call	Pl_Deallocate
	jmp	X0_nl__a0
	.p2align	4,,15
	.type	X0_oneouterloop__a8,@function
.globl X0_oneouterloop__a8

X0_oneouterloop__a8:
	movl	$Lpred5_1+0,%eax
	movl	$8,%edx
	call	Pl_Create_Choice_Point
	movl	$6,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+8,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+12,%eax
	movl	%eax,-24(%edi)
	movl	pl_reg_bank+16,%eax
	movl	%eax,-28(%edi)
	movl	pl_reg_bank+24,%eax
	movl	%eax,-32(%edi)
	movl	pl_reg_bank+28,%eax
	movl	%eax,-36(%edi)
	movl	at+28,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+8
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+8,%edx
	call	Pl_Blt_Lt
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+20,%eax
	movl	%eax,pl_reg_bank+16
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+12
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+20
	movl	$.Lcont17,pl_reg_bank+1036
	jmp	X0_oneinnerloop__a6
.Lcont17:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+4
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+8
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+12
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+16
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+20
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+24
	movl	-36(%edi),%eax
	movl	%eax,pl_reg_bank+28
	call	Pl_Deallocate
	jmp	X0_oneouterloop__a8

Lpred5_1:
	movl	$8,%eax
	call	Pl_Delete_Choice_Point
	movl	$5,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+4,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+12,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-24(%edi)
	movl	pl_reg_bank+24,%eax
	movl	%eax,-28(%edi)
	movl	pl_reg_bank+28,%eax
	movl	%eax,-32(%edi)
	movl	pl_reg_bank+0,%eax
	movl	%eax,pl_reg_bank+4
	movl	fn+0,%eax
	call	Pl_Put_Structure_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+4,%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	movl	$.Lcont18,pl_reg_bank+1036
	jmp	X1_5C5C2B__a1
.Lcont18:
	movl	pl_reg_bank+1040,%edi
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+4
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont19,pl_reg_bank+1036
	jmp	X0_append__a3
.Lcont19:
	movl	pl_reg_bank+1040,%edi
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+4
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont20,pl_reg_bank+1036
	jmp	X0_append__a3
.Lcont20:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	-20(%edi),%eax
	movl	pl_reg_bank+0,%edx
	call	Pl_Unify
	testl	%eax,%eax
	je	fail
	call	Pl_Deallocate
	jmp	*pl_reg_bank+1036
	.p2align	4,,15
	.type	X0_oneinnerloop__a6,@function
.globl X0_oneinnerloop__a6

X0_oneinnerloop__a6:
	movl	$Lpred6_1+0,%eax
	movl	$6,%edx
	call	Pl_Create_Choice_Point
	movl	$8,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+8,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+12,%eax
	movl	%eax,-24(%edi)
	movl	pl_reg_bank+16,%eax
	movl	%eax,-28(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-32(%edi)
	movl	at+28,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+8
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+8,%edx
	call	Pl_Blt_Lt
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+4,%eax
	leal	pl_reg_bank+8,%edx
	call	Pl_Math_Load_Value
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+4,%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+0,%eax
	movl	%eax,-36(%edi)
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-24(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+8,%eax
	leal	pl_reg_bank+4,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483629,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+8
	movl	pl_reg_bank+4,%eax
	movl	pl_reg_bank+8,%edx
	call	Pl_Fct_Mul
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Add
	movl	%eax,pl_reg_bank+0
	leal	-40(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+4
	movl	$.Lcont21,pl_reg_bank+1036
	jmp	X0_ptr_dereference__a2
.Lcont21:
	movl	pl_reg_bank+1040,%edi
	movl	-40(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont22,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont22:
	movl	$.Lcont23,pl_reg_bank+1036
	jmp	X0_nl__a0
.Lcont23:
	movl	pl_reg_bank+1040,%edi
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_List
	movl	%eax,pl_reg_bank+4
	movl	-40(%edi),%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	call	Pl_Unify_Nil
	testl	%eax,%eax
	je	fail
	leal	-44(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont24,pl_reg_bank+1036
	jmp	X0_append__a3
.Lcont24:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	-36(%edi),%eax
	call	Pl_Put_Unsafe_Value
	movl	%eax,pl_reg_bank+4
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+12
	movl	-44(%edi),%eax
	call	Pl_Put_Unsafe_Value
	movl	%eax,pl_reg_bank+16
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+20
	call	Pl_Deallocate
	jmp	X0_oneinnerloop__a6

Lpred6_1:
	movl	$6,%eax
	call	Pl_Delete_Choice_Point
	movl	$4,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+4,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+8,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+16,%eax
	movl	%eax,-24(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-28(%edi)
	movl	pl_reg_bank+0,%eax
	movl	%eax,pl_reg_bank+4
	movl	fn+0,%eax
	call	Pl_Put_Structure_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+4,%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	movl	$.Lcont25,pl_reg_bank+1036
	jmp	X1_5C5C2B__a1
.Lcont25:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	-20(%edi),%eax
	movl	pl_reg_bank+0,%edx
	call	Pl_Unify
	testl	%eax,%eax
	je	fail
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+4
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+8
	call	Pl_Deallocate
	jmp	X0_append__a3
	.p2align	4,,15
	.type	X0_calculate_out_loop__a6,@function
.globl X0_calculate_out_loop__a6

X0_calculate_out_loop__a6:
	movl	$Lpred7_1+0,%eax
	movl	$6,%edx
	call	Pl_Create_Choice_Point
	movl	$5,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+4,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+8,%eax
	movl	%eax,-24(%edi)
	movl	pl_reg_bank+16,%eax
	movl	%eax,-28(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-32(%edi)
	movl	at+28,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Blt_Lt
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+12,%eax
	movl	%eax,pl_reg_bank+16
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+12
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+20
	movl	$.Lcont26,pl_reg_bank+1036
	jmp	X0_calculate_middle_loop__a6
.Lcont26:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+4
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+12
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+16
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+20
	call	Pl_Deallocate
	jmp	X0_calculate_out_loop__a6

Lpred7_1:
	movl	$6,%eax
	call	Pl_Delete_Choice_Point
	movl	$2,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+12,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+0,%eax
	movl	%eax,pl_reg_bank+4
	movl	fn+0,%eax
	call	Pl_Put_Structure_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+4,%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	movl	$.Lcont27,pl_reg_bank+1036
	jmp	X1_5C5C2B__a1
.Lcont27:
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+4
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+8
	call	Pl_Deallocate
	jmp	X0_append__a3
	.p2align	4,,15
	.type	X0_calculate_middle_loop__a6,@function
.globl X0_calculate_middle_loop__a6

X0_calculate_middle_loop__a6:
	movl	$Lpred8_1+0,%eax
	movl	$6,%edx
	call	Pl_Create_Choice_Point
	movl	$8,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+4,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+8,%eax
	movl	%eax,-24(%edi)
	movl	pl_reg_bank+12,%eax
	movl	%eax,-28(%edi)
	movl	pl_reg_bank+16,%eax
	movl	%eax,-32(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-36(%edi)
	movl	at+28,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-20(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Blt_Lt
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+8
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+4
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+12
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+16
	movl	$-2147483645,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+20
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+24
	leal	-40(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+28
	movl	$.Lcont28,pl_reg_bank+1036
	jmp	X0_calculate_inner_loop__a8
.Lcont28:
	movl	pl_reg_bank+1040,%edi
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_List
	movl	%eax,pl_reg_bank+4
	movl	-40(%edi),%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	call	Pl_Unify_Nil
	testl	%eax,%eax
	je	fail
	leal	-44(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont29,pl_reg_bank+1036
	jmp	X0_append__a3
.Lcont29:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-20(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+4
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-24(%edi),%eax
	movl	%eax,pl_reg_bank+8
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+12
	movl	-44(%edi),%eax
	call	Pl_Put_Unsafe_Value
	movl	%eax,pl_reg_bank+16
	movl	-36(%edi),%eax
	movl	%eax,pl_reg_bank+20
	call	Pl_Deallocate
	jmp	X0_calculate_middle_loop__a6

Lpred8_1:
	movl	$6,%eax
	call	Pl_Delete_Choice_Point
	movl	$2,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+16,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-20(%edi)
	movl	fn+0,%eax
	call	Pl_Put_Structure_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+4,%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	movl	$.Lcont30,pl_reg_bank+1036
	jmp	X1_5C5C2B__a1
.Lcont30:
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+4
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+8
	call	Pl_Deallocate
	jmp	X0_append__a3
	.p2align	4,,15
	.type	X0_calculate_inner_loop__a8,@function
.globl X0_calculate_inner_loop__a8

X0_calculate_inner_loop__a8:
	movl	$Lpred9_1+0,%eax
	movl	$8,%edx
	call	Pl_Create_Choice_Point
	movl	$12,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+4,%eax
	movl	%eax,-20(%edi)
	movl	pl_reg_bank+8,%eax
	movl	%eax,-24(%edi)
	movl	pl_reg_bank+12,%eax
	movl	%eax,-28(%edi)
	movl	pl_reg_bank+16,%eax
	movl	%eax,-32(%edi)
	movl	pl_reg_bank+20,%eax
	movl	%eax,-36(%edi)
	movl	pl_reg_bank+24,%eax
	movl	%eax,-40(%edi)
	movl	pl_reg_bank+28,%eax
	movl	%eax,-44(%edi)
	movl	at+28,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-24(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Blt_Lt
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Mul
	movl	%eax,pl_reg_bank+0
	movl	-24(%edi),%eax
	leal	pl_reg_bank+4,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Add
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+0,%eax
	movl	%eax,-48(%edi)
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-24(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483633,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+4
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Mul
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	leal	pl_reg_bank+4,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Add
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+0,%eax
	movl	%eax,-52(%edi)
	movl	-52(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	$.Lcont31,pl_reg_bank+1036
	jmp	X0_write__a1
.Lcont31:
	movl	$.Lcont32,pl_reg_bank+1036
	jmp	X0_nl__a0
.Lcont32:
	movl	pl_reg_bank+1040,%edi
	movl	-48(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+4
	leal	-56(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont33,pl_reg_bank+1036
	jmp	X0_nth__a3
.Lcont33:
	movl	pl_reg_bank+1040,%edi
	movl	-52(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+4
	leal	-60(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont34,pl_reg_bank+1036
	jmp	X0_nth__a3
.Lcont34:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-56(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	-60(%edi),%eax
	leal	pl_reg_bank+4,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Mul
	movl	%eax,pl_reg_bank+4
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-36(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+4,%eax
	leal	pl_reg_bank+4,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	movl	pl_reg_bank+4,%edx
	call	Pl_Fct_Add
	movl	%eax,pl_reg_bank+0
	movl	-40(%edi),%eax
	movl	pl_reg_bank+0,%edx
	call	Pl_Unify
	testl	%eax,%eax
	je	fail
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	-24(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	pl_reg_bank+0,%eax
	call	Pl_Fct_Inc
	movl	%eax,pl_reg_bank+8
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	movl	-20(%edi),%eax
	movl	%eax,pl_reg_bank+4
	movl	-28(%edi),%eax
	movl	%eax,pl_reg_bank+12
	movl	-32(%edi),%eax
	movl	%eax,pl_reg_bank+16
	movl	-40(%edi),%eax
	movl	%eax,pl_reg_bank+20
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+24
	movl	-44(%edi),%eax
	movl	%eax,pl_reg_bank+28
	call	Pl_Deallocate
	jmp	X0_calculate_inner_loop__a8

Lpred9_1:
	movl	$8,%eax
	call	Pl_Delete_Choice_Point
	movl	$2,%eax
	call	Pl_Allocate
	movl	pl_reg_bank+20,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	pl_reg_bank+28,%eax
	movl	%eax,-20(%edi)
	movl	fn+0,%eax
	call	Pl_Put_Structure_Tagged
	movl	%eax,pl_reg_bank+0
	movl	pl_reg_bank+8,%eax
	call	Pl_Unify_Local_Value
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	movl	$.Lcont35,pl_reg_bank+1036
	jmp	X1_5C5C2B__a1
.Lcont35:
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	leal	pl_reg_bank+0,%edx
	call	Pl_Math_Load_Value
	movl	-20(%edi),%eax
	movl	pl_reg_bank+0,%edx
	call	Pl_Unify
	testl	%eax,%eax
	je	fail
	call	Pl_Deallocate
	jmp	*pl_reg_bank+1036
	.p2align	4,,15
	.type	X0_test__a1,@function
.globl X0_test__a1

X0_test__a1:
	movl	$1,%eax
	call	Pl_Allocate
	call	Pl_Put_List
	movl	%eax,pl_reg_bank+4
	movl	$-2147483641,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	call	Pl_Unify_List
	testl	%eax,%eax
	je	fail
	movl	$-2147483637,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	call	Pl_Unify_List
	testl	%eax,%eax
	je	fail
	movl	$-2147483633,%eax
	call	Pl_Unify_Integer_Tagged
	testl	%eax,%eax
	je	fail
	call	Pl_Unify_Nil
	testl	%eax,%eax
	je	fail
	movl	pl_reg_bank+1040,%edi
	leal	-16(%edi),%eax
	call	Pl_Put_Y_Variable
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont36,pl_reg_bank+1036
	jmp	X0_append__a3
.Lcont36:
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_Nil
	movl	%eax,pl_reg_bank+4
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+8
	movl	$.Lcont37,pl_reg_bank+1036
	jmp	X0_append__a3
.Lcont37:
	call	Pl_Deallocate
	jmp	X0_nl__a0
	.p2align	4,,15
	.type	X0_test2__a2,@function
.globl X0_test2__a2

X0_test2__a2:
	movl	$1,%eax
	call	Pl_Allocate
	movl	at+12,%eax
	movl	%eax,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_Bip_Name_Untagged_2
	movl	pl_reg_bank+0,%eax
	leal	pl_reg_bank+8,%edx
	call	Pl_Math_Load_Value
	movl	$-2147483629,%eax
	call	Pl_Put_Integer_Tagged
	movl	%eax,pl_reg_bank+12
	movl	pl_reg_bank+8,%eax
	movl	pl_reg_bank+12,%edx
	call	Pl_Fct_Add
	movl	%eax,pl_reg_bank+8
	movl	pl_reg_bank+8,%eax
	movl	pl_reg_bank+1040,%edi
	movl	%eax,-16(%edi)
	movl	$.Lcont38,pl_reg_bank+1036
	jmp	X0_ptr_dereference__a2
.Lcont38:
	movl	pl_reg_bank+1040,%edi
	movl	-16(%edi),%eax
	call	Pl_Put_Unsafe_Value
	movl	%eax,pl_reg_bank+0
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+4
	call	Pl_Deallocate
	jmp	X0_ptr_dereference__a2
	.p2align	4,,15
	.type	X0_test3__a1,@function
.globl X0_test3__a1

X0_test3__a1:
	call	Pl_Put_X_Variable
	movl	%eax,pl_reg_bank+4
	jmp	X0_strlen_wrapper__a2
	.p2align	4,,15
	.type	X0_ptr_dereference__a2,@function
.globl X0_ptr_dereference__a2

X0_ptr_dereference__a2:
	movl	$.LC0,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_C_Bip_Name
	movl	pl_reg_bank+0,%eax
	movl	%eax,0(%esp)
	call	Pl_Rd_Float_Check
	fstpl	pl_foreign_double+0
	movl	pl_reg_bank+4,%eax
	movl	%eax,0(%esp)
	call	Pl_Check_For_Un_Integer
	movl	pl_foreign_double+0,%eax
	movl	%eax,0(%esp)
	movl	pl_foreign_double+4,%eax
	movl	%eax,4(%esp)
	movl	$pl_foreign_long+4,8(%esp)
	call	ptr_dereference
	testl	%eax,%eax
	je	fail
	movl	pl_foreign_long+4,%eax
	movl	%eax,0(%esp)
	movl	pl_reg_bank+4,%eax
	movl	%eax,4(%esp)
	call	Pl_Un_Integer
	testl	%eax,%eax
	je	fail
	jmp	*pl_reg_bank+1036
	.p2align	4,,15
	.type	X0_strlen_wrapper__a2,@function
.globl X0_strlen_wrapper__a2

X0_strlen_wrapper__a2:
	movl	$.LC1,0(%esp)
	movl	$2,4(%esp)
	call	Pl_Set_C_Bip_Name
	movl	pl_reg_bank+0,%eax
	movl	%eax,0(%esp)
	call	Pl_Rd_String_Check
	movl	%eax,pl_foreign_long+0
	movl	pl_reg_bank+4,%eax
	movl	%eax,0(%esp)
	call	Pl_Check_For_Un_Integer
	movl	pl_foreign_long+0,%eax
	movl	%eax,0(%esp)
	movl	$pl_foreign_long+4,4(%esp)
	call	strlen_wrapper
	testl	%eax,%eax
	je	fail
	movl	pl_foreign_long+4,%eax
	movl	%eax,0(%esp)
	movl	pl_reg_bank+4,%eax
	movl	%eax,4(%esp)
	call	Pl_Un_Integer
	testl	%eax,%eax
	je	fail
	jmp	*pl_reg_bank+1036
	.p2align	4,,15
	.type	ensure_linked,@function

ensure_linked:
	jmp	X1_24666F7263655F666F726569676E5F6C696E6B__a0
	.p2align	4,,15
	.type	Object_Initializer,@function

Object_Initializer:
	pushl	%esi
	subl	$132,%esp
	movl	$Prolog_Object_Initializer+0,0(%esp)
	movl	$System_Directives+0,4(%esp)
	movl	$User_Directives+0,8(%esp)
	call	Pl_New_Object
	addl	$132,%esp
	popl	%esi
	ret	
	.p2align	4,,15
	.type	Prolog_Object_Initializer,@function

Prolog_Object_Initializer:
	pushl	%esi
	subl	$132,%esp
	movl	$.LC2,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+16
	movl	$.LC3,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+0
	movl	$.LC4,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+28
	movl	$.LC5,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+20
	movl	$.LC6,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+52
	movl	$.LC7,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+48
	movl	$.LC8,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+44
	movl	$.LC9,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+12
	movl	$.LC10,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+4
	movl	$.LC11,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+40
	movl	$.LC12,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+36
	movl	$.LC13,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+24
	movl	$.LC14,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+32
	movl	$.LC0,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+68
	movl	$.LC1,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+72
	movl	$.LC15,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+56
	movl	$.LC16,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+60
	movl	$.LC17,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+64
	movl	$.LC18,0(%esp)
	call	Pl_Create_Atom
	movl	%eax,at+8
	movl	$.LC19,%eax
	call	Pl_Create_Atom_Tagged
	movl	%eax,ta+4
	movl	$.LC20,%eax
	call	Pl_Create_Atom_Tagged
	movl	%eax,ta+0
	movl	$.LC4,%eax
	movl	$2,%edx
	call	Pl_Create_Functor_Arity_Tagged
	movl	%eax,fn+0
	movl	at+4,%eax
	movl	$3,%edx
	movl	at+0,%ecx
	movl	$5,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_main__a3+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+16,%eax
	movl	$1,%edx
	movl	at+0,%ecx
	movl	$5,0(%esp)
	movl	$1,4(%esp)
	movl	$X1_246D61696E2F335F2461757831__a1+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+24,%eax
	movl	$2,%edx
	movl	at+0,%ecx
	movl	$8,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_pr__a2+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+32,%eax
	movl	$3,%edx
	movl	at+0,%ecx
	movl	$12,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_prline__a3+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+36,%eax
	movl	$8,%edx
	movl	at+0,%ecx
	movl	$15,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_oneouterloop__a8+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+40,%eax
	movl	$6,%edx
	movl	at+0,%ecx
	movl	$19,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_oneinnerloop__a6+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+44,%eax
	movl	$6,%edx
	movl	at+0,%ecx
	movl	$27,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_calculate_out_loop__a6+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+48,%eax
	movl	$6,%edx
	movl	at+0,%ecx
	movl	$30,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_calculate_middle_loop__a6+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+52,%eax
	movl	$8,%edx
	movl	at+0,%ecx
	movl	$35,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_calculate_inner_loop__a8+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+56,%eax
	movl	$1,%edx
	movl	at+0,%ecx
	movl	$46,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_test__a1+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+60,%eax
	movl	$2,%edx
	movl	at+0,%ecx
	movl	$47,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_test2__a2+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+64,%eax
	movl	$1,%edx
	movl	at+0,%ecx
	movl	$48,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_test3__a1+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+68,%eax
	movl	$2,%edx
	movl	at+0,%ecx
	movl	$1,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_ptr_dereference__a2+0,8(%esp)
	call	Pl_Create_Pred
	movl	at+72,%eax
	movl	$2,%edx
	movl	at+0,%ecx
	movl	$2,0(%esp)
	movl	$129,4(%esp)
	movl	$X0_strlen_wrapper__a2+0,8(%esp)
	call	Pl_Create_Pred
	addl	$132,%esp
	popl	%esi
	ret	
	.p2align	4,,15
	.type	System_Directives,@function

System_Directives:
	pushl	%esi
	subl	$132,%esp
	addl	$132,%esp
	popl	%esi
	ret	
	.p2align	4,,15
	.type	User_Directives,@function

User_Directives:
	pushl	%esi
	subl	$132,%esp
	addl	$132,%esp
	popl	%esi
	ret	
	.section	.ctors,"aw",@progbits
	.align	4
	.long	Object_Initializer
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC19:
	.string	" "
.LC2:
	.string	"$main/3_$aux1"
.LC3:
	.string	"/home/yufeijiang/Dropbox/security thursday/multilingual obfuscation/babel/evaluation/matrix_mult/CIL/translation/main.pl"
.LC4:
	.string	"<"
.LC5:
	.string	"=\\="
.LC6:
	.string	"calculate_inner_loop"
.LC7:
	.string	"calculate_middle_loop"
.LC8:
	.string	"calculate_out_loop"
.LC9:
	.string	"is"
.LC10:
	.string	"main"
.LC20:
	.string	"need 2 3*3 interger matrices"
.LC11:
	.string	"oneinnerloop"
.LC12:
	.string	"oneouterloop"
.LC13:
	.string	"pr"
.LC14:
	.string	"prline"
.LC0:
	.string	"ptr_dereference"
.LC1:
	.string	"strlen_wrapper"
.LC15:
	.string	"test"
.LC16:
	.string	"test2"
.LC17:
	.string	"test3"
.LC18:
	.string	"user"
	.data	
	.align	4
	.local	at
	.comm	at,76,4
	.local	fn
	.comm	fn,4,4
	.local	ta
	.comm	ta,8,4
	.section	.note.GNU-stack,"",@progbits
